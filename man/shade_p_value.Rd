% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/shade_p_value.R
\name{shade_p_value}
\alias{shade_p_value}
\alias{shade_pvalue}
\title{Shade histogram area beyond an observed statistic}
\usage{
shade_p_value(obs_stat, direction, color = "red2", fill = "pink", ...)

shade_pvalue(obs_stat, direction, color = "red2", fill = "pink", ...)
}
\arguments{
\item{obs_stat}{The observed statistic or estimate. For
\code{\link[=calculate]{calculate()}}-based workflows, this will be a 1-element numeric vector or
a \verb{1 x 1} data frame containing the observed statistic.
For \code{\link[=fit.infer]{fit()}}-based workflows, a \verb{(p + 1) x 2} data frame
with columns \code{term} and \code{estimate} giving the observed estimate for
each term.}

\item{direction}{A string specifying in which direction the shading should
occur. Options are \code{"less"}, \code{"greater"}, or \code{"two-sided"}. Can
also give \code{"left"}, \code{"right"}, \code{"both"}, \code{"two_sided"}, \code{"two sided"},
or \code{"two.sided"}. If \code{NULL}, the function will not shade any area.}

\item{color}{A character or hex string specifying the color of the observed
statistic as a vertical line on the plot.}

\item{fill}{A character or hex string specifying the color to shade the
p-value region. If \code{NULL}, the function will not shade any area.}

\item{...}{Other arguments passed along to \\{ggplot2\\} functions.
For expert use only.}
}
\value{
If added to an existing {infer} visualization, a \\{ggplot2\\}
object displaying the supplied statistic on top of its corresponding
distribution. Otherwise, an \code{infer_layer} list.
}
\description{
\code{shade_confidence_interval()} plots a p-value region on top of
\code{\link[=visualize]{visualize()}} output. The output is a ggplot2 layer that can be added with
\code{+}. The function has a shorter alias, \code{shade_pvalue()}.

Learn more in \code{vignette("infer")}.
}
\examples{
# find the point estimate---mean number of hours worked per week
point_estimate <- gss \%>\%
  specify(response = hours) \%>\%
  calculate(stat = "mean") \%>\%
  dplyr::pull()
  
# ...and a null distribution
null_dist <- gss \%>\%
  # ...we're interested in the number of hours worked per week
  specify(response = hours) \%>\%
  # hypothesizing that the mean is 40
  hypothesize(null = "point", mu = 40) \%>\%
  # generating data points for a null distribution
  generate(reps = 1000, type = "bootstrap") \%>\%
  # finding the null distribution
  calculate(stat = "mean")
  
# shade the p-value of the point estimate
null_dist \%>\%
  visualize() +
  shade_p_value(obs_stat = point_estimate, direction = "two-sided")

# More in-depth explanation of how to use the infer package
\dontrun{
vignette("infer")
}

}
\seealso{
Other visualization functions: 
\code{\link{shade_confidence_interval}()},
\code{\link{visualize}()}
}
\concept{visualization functions}
